name: Build (Windows)

on: push

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      # Note: jdk8 is necessary to use javah
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

#      - name: Install Make
#        run: choco install make
#
#      - name: Build MiniSat DLL
#        run: |
#          git clone https://github.com/niklasso/minisat minisat-src
#          git apply --directory minisat-src minisat-dll.patch
#          make -C minisat-src dll
#          cp minisat-src/build/dynamic/lib/minisat.dll .

      - run: echo $Env:JAVA_HOME
      - run: dir $Env:JAVA_HOME
      - run: dir $Env:JAVA_HOME/include

#      - name: Compile classes
#        uses: eskatos/gradle-command-action@v1
#        with:
#          arguments: classes
#
#      - run: javah -d build/headers -classpath build/classes/kotlin/main com.github.lipen.jnisat.JMiniSat
      - run: md build/lib
      - run: g++ -Wall -O3 -shared -fpic -s -D __STDC_LIMIT_MACROS -D __STDC_FORMAT_MACROS -I C:\hostedtoolcache\windows\jdk\8.0.242\x64\include -I C:\hostedtoolcache\windows\jdk\8.0.242\x64\include\win32 -I build/headers -I minisat-src -L . -lminisat -lz -o build/lib/jminisat.dll src/main/cpp/JMiniSat.cpp
      - run: md src/main/resources/lib/win64
      - run: cp build/lib/jminisat.dll src/main/resources/lib/win64/jminisat.dll

#      - name: Build package using Gradle wrapper
#        run: gradlew.bat -s build -x test
#
#      - name: Upload to GH Releases
#        uses: softprops/action-gh-release@v0.1.5
#        if: startsWith(github.ref, 'refs/tags/')
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          files: |
#            build/lib/jminisat.dll
